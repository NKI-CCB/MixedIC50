% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/djvMixedIC50.R
\name{initIC50}
\alias{initIC50}
\title{Preparing data for curve fitting}
\usage{
initIC50(szFileName = "~/pub/gdsc_drug_sensitivity_raw_data_w5.csv")
}
\arguments{
\item{szFileName}{name to use as data source}
}
\value{
groupedData object
}
\description{
Prepares data for use in \code{\link{fitModel}}. As the model was initially developed for estimating IC50 values from the GDSC, this function serves as a convenience function to process this data into a form suitable for curve fitting. It takes the default GDSC file format and processes the dose-response and control well intensities to obtain the relative viabilities. These viabilities returned, together with the reverse-order dilution steps, the cell line name, the drug, and the maximum screening concentration. The object returned is a \code{\link{groupedData}}.
}
\details{
Please see the section on Custom Screens for more information how to prepare the data for fitting.
}
\section{Custom screen}{


Internally, the fitting considers the viability to be a function of the dilution steps. In this way, the maximum screening concentration always takes the same 'x' value, and the variation in the parameters can be interpreted in terms of the dilution steps. By design, the highest screening concentration is the 9'th dilution step, and the lowest screening concentration is the first dilution step. The 'y' value is the 1-viability. The CL value is the cell line name. The drug value is the drug identifier, and the maxc hold the maximum concentration.

A data frame holding the data needs to contain the following (literal) column names: "x","y","CL","drug", and "maxc". In which x is an integer of value 9 and lower (see also \code{\link{getXfromConcSeries}}), y is 1-viability [0..1], CL is the cell line name (factor), drug is the drug identifier (factor), and finally maxc is the maximum test concentration (float, >0). 

The data frame is then converted to a groupedData object by the following call (dfDat is the data frame holding the data).

gDat <- groupedData(y ~ x | drug/CL, data = dfDat, FUN = mean, labels = list(x = "Concentration", y = "Viability"), units = list(x = "uM/l", y = "percentage killed"))
}
\examples{
gDat      <- initIC50(szFileName='~/myFile.csv')
fmMod1    <- fitModel(gDat)
outStats  <- gatherModelStats(gDat=gDat,fmMod1=fmMod1)
dfIC50    <- outStats$IC50
dfRMSE    <- outStats$RMSE
dfAUC     <- outStats$AUC
dfAUCtrap <- outStats$AUCtrap

The input data looks as follows:

Grouped Data: y ~ x | drug/CL
  x          y     CL drug maxc
1 9 0.88079708 MC-CAR    1    2
2 8 0.79139147 MC-CAR    1    2
3 7 0.66075637 MC-CAR    1    2
4 6 0.50000000 MC-CAR    1    2
5 5 0.33924363 MC-CAR    1    2
6 4 0.20860853 MC-CAR    1    2
7 3 0.11920292 MC-CAR    1    2
8 2 0.06496917 MC-CAR    1    2
9 1 0.03444520 MC-CAR    1    2

}

